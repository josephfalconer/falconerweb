// ======
// Page features
// ========================================

// accordion
$accordion-heading-height: remcalc(85);
$accordion-section-transition: $transition-duration * 2;

.accordion {
  position: relative;
  background: $white;
  margin: 0 auto;
  max-width: remcalc(1000);

  @include mq(lg) {
    box-shadow: 0 0 10px transparentize($black, 0.75);
  }

  &__section {
    &--current .accordion__heading {
      border-bottom-color: $clean-transparent;
      transition: background $transition-duration,
        border-bottom-color 0s;
    }

    &:last-child .accordion__heading {
      border-bottom: none;
    }
  }

  &__heading {
    display: block;
    position: relative;
    border-bottom: remcalc(1) solid rgba(255,255,255,0.5);
    height: $accordion-heading-height;
    background: darken($white, 7.5%);
    line-height: $accordion-heading-height;
    color: $text-color-main;
    transition: background $transition-duration,
      border-bottom-color 0s $accordion-section-transition;
    cursor: pointer;

    &:hover,
    &:focus {
      background: darken($white, 14%);
    }
  }

  &__title {
    margin: 0;
  }

  &__tooltip {
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    height: $accordion-heading-height;
    padding-right: remcalc(30);
    line-height: $accordion-heading-height;
    transition: opacity $transition-duration;
    font-size: remcalc(16);

    @include mq(md, max) {
      padding-right: remcalc(20);
      font-size: remcalc(12);
    }
  }

  &__close {
    display: none;
  }

  &__content {
    margin: 0 auto;
    @include sides(90%, remcalc(100));
    max-width: remcalc(750);
    overflow: hidden;
    text-align: left;
    transition: height $accordion-section-transition;
  }

  &__contentinner {
    margin: 0 auto;
    padding: remcalc(30) 0;

    p {
      &:first-child {
        margin-top: 0;
      }

      &:last-child {
        margin-bottom: 0;
      }
    }
  }
}

// demos menu
.demos {
	margin: 0 auto;
	max-width: remcalc(1200);

	@include mq(md) {
		display: flex;
		flex-wrap: wrap;
		box-shadow: 0 0 50px $grey-transparent;
	}

	&__item {
		display: inline-block;
		flex: 1 50%;
		transition: background 5s;

		@include mq(lg) {
			flex: 1 50%;
		}
	}

	&__link {
		display: block;
		position: relative;
		@include square(100%);
		background: $clean-transparent;
		color: $white;
		transition: all $transition-duration;

		&:hover, &:focus {
			background: $black-transparent;

			.demos__tooltip {
				opacity: 1;
				transform: translateY(-30px);
			}
		}
	}

	&__text {
		padding: 30px;
		flex-direction: column;
		height: 100%;

		@include mq(lg) {
			padding: 100px;
		}
	}

	&__title {
		margin-top: 0;
	}

	&__description {
		margin: 0;
		text-align: left;
	}

	&__tooltip {
		display: block;
		position: absolute;
		bottom: 0;
		width: 100%;
		opacity: 0;
		transition: opacity $transition-duration, transform 0.4s;

		@include mq(md, max) {
			display: none;
		}
	}
}

// bubble animations
$bubbles-rising: 3;
$bubbles-rise-duration: 15s;
$bubbles-rise-delay: 0s;
$bubbles-rise-stagger: 5s;

$bubbles-bobbing: 3;
$bubbles-bob-reach: -20px;
$bubbles-bob-duration: 3s;
$bubbles-bob-delay: 0s;
$bubbles-bob-stagger: 2s;

// create keyframes for rising bubbles
@keyframes rise {
  $rise-percentage: 0%;
  $riseY: 0px;
  $riseX: 20px;

  @for $i from 1 to 12 {

    // produce alternating directions
    @if $riseX == -20px {
      $riseX: 20px;
    } @else {
      $riseX: -20px;
    }

    // add opacity changes for the last two frames
    @if $rise-percentage == 90% {
      // the penultimate frame with full opacity
      #{$rise-percentage} {
        transform: translate3d(#{$riseX}, -#{$riseY}, 0);
        opacity: 1;
      }
    } @else if $rise-percentage == 100% {
      // the final frame with zero opacity
      #{$rise-percentage} {
        transform: translate3d(#{$riseX}, -#{$riseY}, 0);
        opacity: 0;
      }
    } @else {
      // a normal frame
      #{$rise-percentage} {
        transform: translate3d(#{$riseX}, -#{$riseY}, 0);
      }
    }

    // increment
    $rise-percentage: $rise-percentage + 10;
    $riseY: $riseY + 50px;
  }
}

// create keyframe for bobbing
@keyframes bob {
  50% {
    transform: translateY($bubbles-bob-reach);
  }
}

// apply animation to rising bubbles
@for $i from 1 through $bubbles-rising {
  .page {
    .bubble--rise#{$i} {
      animation: rise $bubbles-rise-duration $bubbles-rise-delay infinite;
    }
  }

  // increment the delay for each bubble's rise
  $bubbles-rise-delay: $bubbles-rise-delay + $bubbles-rise-stagger;
}

// apply animations to bobbing bubbles
@for $i from 1 through $bubbles-bobbing {
  .page {
    .bubble--bob#{$i} {
      animation: bob $bubbles-bob-duration $bubbles-bob-delay infinite;
    }
  }

  // increment the delay for each bubble's bob
  $bubbles-bob-delay: $bubbles-bob-delay + $bubbles-bob-stagger;
}
